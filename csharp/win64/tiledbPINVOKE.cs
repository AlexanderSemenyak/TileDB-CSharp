//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace tiledb {

class tiledbPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="SWIGRegisterExceptionCallbacks_tiledb")]
    public static extern void SWIGRegisterExceptionCallbacks_tiledb(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_tiledb")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_tiledb(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_tiledb(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_tiledb(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="SWIGRegisterStringCallback_tiledb")]
    public static extern void SWIGRegisterStringCallback_tiledb(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_tiledb(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static tiledbPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Array__SWIG_0")]
  public static extern global::System.IntPtr new_Array__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Array__SWIG_1")]
  public static extern global::System.IntPtr new_Array__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, string jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Array__SWIG_2")]
  public static extern global::System.IntPtr new_Array__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, ulong jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Array__SWIG_3")]
  public static extern global::System.IntPtr new_Array__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, string jarg5, ulong jarg6);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Array__SWIG_4")]
  public static extern global::System.IntPtr new_Array__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Array__SWIG_5")]
  public static extern global::System.IntPtr new_Array__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Array")]
  public static extern void delete_Array(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_is_open")]
  public static extern bool Array_is_open(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_uri")]
  public static extern string Array_uri(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_schema")]
  public static extern global::System.IntPtr Array_schema(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_ptr")]
  public static extern global::System.IntPtr Array_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_open__SWIG_0")]
  public static extern void Array_open__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_open__SWIG_1")]
  public static extern void Array_open__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_open__SWIG_2")]
  public static extern void Array_open__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, ulong jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_open__SWIG_3")]
  public static extern void Array_open__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3, string jarg4, ulong jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_reopen")]
  public static extern void Array_reopen(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_reopen_at")]
  public static extern void Array_reopen_at(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_timestamp")]
  public static extern ulong Array_timestamp(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_close")]
  public static extern void Array_close(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate__SWIG_0")]
  public static extern void Array_consolidate__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate__SWIG_1")]
  public static extern void Array_consolidate__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate__SWIG_2")]
  public static extern void Array_consolidate__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, System.IntPtr jarg4, uint jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_vacuum__SWIG_0")]
  public static extern void Array_vacuum__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_vacuum__SWIG_1")]
  public static extern void Array_vacuum__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate__SWIG_3")]
  public static extern void Array_consolidate__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, string jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate__SWIG_4")]
  public static extern void Array_consolidate__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_create__SWIG_0")]
  public static extern void Array_create__SWIG_0(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_load_schema")]
  public static extern global::System.IntPtr Array_load_schema(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_create__SWIG_1")]
  public static extern void Array_create__SWIG_1(string jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_encryption_type")]
  public static extern int Array_encryption_type(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_non_empty_domain_var__SWIG_0")]
  public static extern global::System.IntPtr Array_non_empty_domain_var__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_non_empty_domain_var__SWIG_1")]
  public static extern global::System.IntPtr Array_non_empty_domain_var__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_query_type")]
  public static extern int Array_query_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate_metadata__SWIG_0")]
  public static extern void Array_consolidate_metadata__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate_metadata__SWIG_1")]
  public static extern void Array_consolidate_metadata__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate_metadata__SWIG_2")]
  public static extern void Array_consolidate_metadata__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, System.IntPtr jarg4, uint jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate_metadata__SWIG_3")]
  public static extern void Array_consolidate_metadata__SWIG_3(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, string jarg4, global::System.Runtime.InteropServices.HandleRef jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_consolidate_metadata__SWIG_4")]
  public static extern void Array_consolidate_metadata__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_delete_metadata")]
  public static extern void Array_delete_metadata(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_has_metadata")]
  public static extern bool Array_has_metadata(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Array_metadata_num")]
  public static extern ulong Array_metadata_num(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ArraySchema__SWIG_0")]
  public static extern global::System.IntPtr new_ArraySchema__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ArraySchema__SWIG_1")]
  public static extern global::System.IntPtr new_ArraySchema__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ArraySchema__SWIG_2")]
  public static extern global::System.IntPtr new_ArraySchema__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ArraySchema__SWIG_3")]
  public static extern global::System.IntPtr new_ArraySchema__SWIG_3();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ArraySchema__SWIG_4")]
  public static extern global::System.IntPtr new_ArraySchema__SWIG_4(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_ArraySchema")]
  public static extern void delete_ArraySchema(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_dump__SWIG_0")]
  public static extern void ArraySchema_dump__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_dump__SWIG_1")]
  public static extern void ArraySchema_dump__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_array_type")]
  public static extern int ArraySchema_array_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_capacity")]
  public static extern ulong ArraySchema_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_capacity")]
  public static extern global::System.IntPtr ArraySchema_set_capacity(global::System.Runtime.InteropServices.HandleRef jarg1, ulong jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_allows_dups")]
  public static extern bool ArraySchema_allows_dups(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_allows_dups")]
  public static extern global::System.IntPtr ArraySchema_set_allows_dups(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_tile_order")]
  public static extern int ArraySchema_tile_order(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_tile_order")]
  public static extern global::System.IntPtr ArraySchema_set_tile_order(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_order")]
  public static extern global::System.IntPtr ArraySchema_set_order(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_cell_order")]
  public static extern int ArraySchema_cell_order(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_cell_order")]
  public static extern global::System.IntPtr ArraySchema_set_cell_order(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_coords_filter_list")]
  public static extern global::System.IntPtr ArraySchema_coords_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_coords_filter_list")]
  public static extern global::System.IntPtr ArraySchema_set_coords_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_offsets_filter_list")]
  public static extern global::System.IntPtr ArraySchema_offsets_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_offsets_filter_list")]
  public static extern global::System.IntPtr ArraySchema_set_offsets_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_domain")]
  public static extern global::System.IntPtr ArraySchema_domain(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_set_domain")]
  public static extern global::System.IntPtr ArraySchema_set_domain(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_add_attribute__SWIG_0")]
  public static extern global::System.IntPtr ArraySchema_add_attribute__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_ptr")]
  public static extern global::System.IntPtr ArraySchema_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_check")]
  public static extern void ArraySchema_check(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_attributes")]
  public static extern global::System.IntPtr ArraySchema_attributes(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_attribute__SWIG_0")]
  public static extern global::System.IntPtr ArraySchema_attribute__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_attribute_num")]
  public static extern uint ArraySchema_attribute_num(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_attribute__SWIG_1")]
  public static extern global::System.IntPtr ArraySchema_attribute__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_has_attribute")]
  public static extern bool ArraySchema_has_attribute(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_to_info_str")]
  public static extern string ArraySchema_to_info_str(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_to_str__SWIG_0")]
  public static extern string ArraySchema_to_str__SWIG_0(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_to_str__SWIG_1")]
  public static extern string ArraySchema_to_str__SWIG_1(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_attribute_names")]
  public static extern global::System.IntPtr ArraySchema_attribute_names(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_dimension_names")]
  public static extern global::System.IntPtr ArraySchema_dimension_names(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_has_dimension")]
  public static extern bool ArraySchema_has_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_dimension__SWIG_0")]
  public static extern global::System.IntPtr ArraySchema_dimension__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_dimension__SWIG_1")]
  public static extern global::System.IntPtr ArraySchema_dimension__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_add_int_dimension")]
  public static extern void ArraySchema_add_int_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_add_attribute__SWIG_1")]
  public static extern void ArraySchema_add_attribute__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ArraySchema_to_json_str")]
  public static extern string ArraySchema_to_json_str(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Attribute__SWIG_0")]
  public static extern global::System.IntPtr new_Attribute__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Attribute__SWIG_1")]
  public static extern global::System.IntPtr new_Attribute__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Attribute__SWIG_2")]
  public static extern global::System.IntPtr new_Attribute__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_name")]
  public static extern string Attribute_name(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_type")]
  public static extern int Attribute_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_cell_size")]
  public static extern ulong Attribute_cell_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_cell_val_num")]
  public static extern uint Attribute_cell_val_num(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_set_cell_val_num")]
  public static extern global::System.IntPtr Attribute_set_cell_val_num(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_variable_sized")]
  public static extern bool Attribute_variable_sized(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_filter_list")]
  public static extern global::System.IntPtr Attribute_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_set_filter_list")]
  public static extern global::System.IntPtr Attribute_set_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_ptr")]
  public static extern global::System.IntPtr Attribute_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_dump__SWIG_0")]
  public static extern void Attribute_dump__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_dump__SWIG_1")]
  public static extern void Attribute_dump__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_is_valid_intdatatype")]
  public static extern bool Attribute_is_valid_intdatatype(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Attribute_create_attribute")]
  public static extern global::System.IntPtr Attribute_create_attribute(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Attribute")]
  public static extern void delete_Attribute(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Config__SWIG_0")]
  public static extern global::System.IntPtr new_Config__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Config__SWIG_1")]
  public static extern global::System.IntPtr new_Config__SWIG_1(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Config_save_to_file")]
  public static extern void Config_save_to_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Config_ptr")]
  public static extern global::System.IntPtr Config_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Config_set")]
  public static extern global::System.IntPtr Config_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Config_get")]
  public static extern string Config_get(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Config_unset")]
  public static extern global::System.IntPtr Config_unset(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Config")]
  public static extern void delete_Config(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Context__SWIG_0")]
  public static extern global::System.IntPtr new_Context__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Context__SWIG_1")]
  public static extern global::System.IntPtr new_Context__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Context__SWIG_2")]
  public static extern global::System.IntPtr new_Context__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_handle_error")]
  public static extern void Context_handle_error(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_ptr")]
  public static extern global::System.IntPtr Context_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_set_error_handler")]
  public static extern global::System.IntPtr Context_set_error_handler(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_config")]
  public static extern global::System.IntPtr Context_config(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_is_supported_fs")]
  public static extern bool Context_is_supported_fs(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_cancel_tasks")]
  public static extern void Context_cancel_tasks(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_set_tag")]
  public static extern void Context_set_tag(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Context_default_error_handler")]
  public static extern void Context_default_error_handler(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Context")]
  public static extern void delete_Context(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_tiledb_query_submit_async_func__SWIG_0")]
  public static extern int tiledb_query_submit_async_func__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, System.IntPtr jarg3, System.IntPtr jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_tiledb_query_submit_async_func__SWIG_1")]
  public static extern int tiledb_query_submit_async_func__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, System.IntPtr jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_type_size")]
  public static extern uint type_size(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_to_str")]
  public static extern string to_str(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Dimension__SWIG_0")]
  public static extern global::System.IntPtr new_Dimension__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_cell_val_num")]
  public static extern uint Dimension_cell_val_num(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_set_cell_val_num")]
  public static extern global::System.IntPtr Dimension_set_cell_val_num(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_filter_list")]
  public static extern global::System.IntPtr Dimension_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_set_filter_list")]
  public static extern global::System.IntPtr Dimension_set_filter_list(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_name")]
  public static extern string Dimension_name(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_type")]
  public static extern int Dimension_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_domain_to_str")]
  public static extern string Dimension_domain_to_str(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_tile_extent_to_str")]
  public static extern string Dimension_tile_extent_to_str(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_ptr")]
  public static extern global::System.IntPtr Dimension_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_is_valid_intdatatype")]
  public static extern bool Dimension_is_valid_intdatatype(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_create_dimension")]
  public static extern global::System.IntPtr Dimension_create_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, string jarg4, string jarg5, string jarg6);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_create_int32_dimension")]
  public static extern global::System.IntPtr Dimension_create_int32_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_create_int64_dimension")]
  public static extern global::System.IntPtr Dimension_create_int64_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, long jarg3, long jarg4, long jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_create_uint64_dimension")]
  public static extern global::System.IntPtr Dimension_create_uint64_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ulong jarg3, ulong jarg4, ulong jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_create_double_dimension")]
  public static extern global::System.IntPtr Dimension_create_double_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, double jarg3, double jarg4, double jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Dimension_create_string_dimension")]
  public static extern global::System.IntPtr Dimension_create_string_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Dimension")]
  public static extern void delete_Dimension(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Domain__SWIG_0")]
  public static extern global::System.IntPtr new_Domain__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Domain__SWIG_1")]
  public static extern global::System.IntPtr new_Domain__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_cell_num")]
  public static extern ulong Domain_cell_num(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_dump__SWIG_0")]
  public static extern void Domain_dump__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_dump__SWIG_1")]
  public static extern void Domain_dump__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_type")]
  public static extern int Domain_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_ndim")]
  public static extern uint Domain_ndim(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_dimensions")]
  public static extern global::System.IntPtr Domain_dimensions(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_dimension__SWIG_0")]
  public static extern global::System.IntPtr Domain_dimension__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_dimension__SWIG_1")]
  public static extern global::System.IntPtr Domain_dimension__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_add_dimension")]
  public static extern global::System.IntPtr Domain_add_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_add_int32_dimension")]
  public static extern void Domain_add_int32_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_add_int64_dimension")]
  public static extern void Domain_add_int64_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, long jarg3, long jarg4, long jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_add_uint64_dimension")]
  public static extern void Domain_add_uint64_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, ulong jarg3, ulong jarg4, ulong jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_add_double_dimension")]
  public static extern void Domain_add_double_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, double jarg3, double jarg4, double jarg5);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_add_string_dimension")]
  public static extern void Domain_add_string_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_has_dimension")]
  public static extern bool Domain_has_dimension(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Domain_ptr")]
  public static extern global::System.IntPtr Domain_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Domain")]
  public static extern void delete_Domain(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_TileDBError")]
  public static extern global::System.IntPtr new_TileDBError(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_TileDBError")]
  public static extern void delete_TileDBError(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_TypeError")]
  public static extern void delete_TypeError(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_SchemaMismatch")]
  public static extern global::System.IntPtr new_SchemaMismatch(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_SchemaMismatch")]
  public static extern void delete_SchemaMismatch(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_AttributeError")]
  public static extern global::System.IntPtr new_AttributeError(string jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_AttributeError")]
  public static extern void delete_AttributeError(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Filter__SWIG_0")]
  public static extern global::System.IntPtr new_Filter__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Filter__SWIG_1")]
  public static extern global::System.IntPtr new_Filter__SWIG_1();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Filter__SWIG_2")]
  public static extern global::System.IntPtr new_Filter__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Filter_ptr")]
  public static extern global::System.IntPtr Filter_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Filter_filter_type")]
  public static extern int Filter_filter_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Filter_to_str")]
  public static extern string Filter_to_str(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Filter")]
  public static extern void delete_Filter(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_FilterList__SWIG_0")]
  public static extern global::System.IntPtr new_FilterList__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_FilterList__SWIG_1")]
  public static extern global::System.IntPtr new_FilterList__SWIG_1();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_FilterList__SWIG_2")]
  public static extern global::System.IntPtr new_FilterList__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_FilterList_ptr")]
  public static extern global::System.IntPtr FilterList_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_FilterList_add_filter")]
  public static extern global::System.IntPtr FilterList_add_filter(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_FilterList_filter")]
  public static extern global::System.IntPtr FilterList_filter(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_FilterList_max_chunk_size")]
  public static extern uint FilterList_max_chunk_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_FilterList_nfilters")]
  public static extern uint FilterList_nfilters(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_FilterList_set_max_chunk_size")]
  public static extern global::System.IntPtr FilterList_set_max_chunk_size(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_FilterList")]
  public static extern void delete_FilterList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_create_group")]
  public static extern void create_group(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Object__SWIG_0")]
  public static extern global::System.IntPtr new_Object__SWIG_0(int jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Object__SWIG_1")]
  public static extern global::System.IntPtr new_Object__SWIG_1(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Object__SWIG_2")]
  public static extern global::System.IntPtr new_Object__SWIG_2(int jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Object__SWIG_3")]
  public static extern global::System.IntPtr new_Object__SWIG_3(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Object__SWIG_4")]
  public static extern global::System.IntPtr new_Object__SWIG_4();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Object__SWIG_5")]
  public static extern global::System.IntPtr new_Object__SWIG_5(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Object_to_str")]
  public static extern string Object_to_str(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Object_type")]
  public static extern int Object_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Object_uri")]
  public static extern string Object_uri(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Object_object_")]
  public static extern global::System.IntPtr Object_object_(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Object_remove")]
  public static extern void Object_remove(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Object_move")]
  public static extern void Object_move(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Object")]
  public static extern void delete_Object(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ObjectIter__SWIG_0")]
  public static extern global::System.IntPtr new_ObjectIter__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_ObjectIter__SWIG_1")]
  public static extern global::System.IntPtr new_ObjectIter__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ObjectIter_set_iter_policy")]
  public static extern void ObjectIter_set_iter_policy(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2, bool jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ObjectIter_set_recursive__SWIG_0")]
  public static extern void ObjectIter_set_recursive__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ObjectIter_set_recursive__SWIG_1")]
  public static extern void ObjectIter_set_recursive__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ObjectIter_set_non_recursive")]
  public static extern void ObjectIter_set_non_recursive(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ObjectIter_begin")]
  public static extern global::System.IntPtr ObjectIter_begin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_ObjectIter_end")]
  public static extern global::System.IntPtr ObjectIter_end(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_ObjectIter")]
  public static extern void delete_ObjectIter(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Query__SWIG_0")]
  public static extern global::System.IntPtr new_Query__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Query__SWIG_1")]
  public static extern global::System.IntPtr new_Query__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Query__SWIG_2")]
  public static extern global::System.IntPtr new_Query__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_ptr")]
  public static extern global::System.IntPtr Query_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_context")]
  public static extern global::System.IntPtr Query_context(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_query_type")]
  public static extern int Query_query_type(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_layout")]
  public static extern global::System.IntPtr Query_set_layout(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_query_layout")]
  public static extern int Query_query_layout(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_array")]
  public static extern global::System.IntPtr Query_array(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_query_status")]
  public static extern int Query_query_status(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_has_results")]
  public static extern bool Query_has_results(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_submit")]
  public static extern int Query_submit(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_submit_async")]
  public static extern void Query_submit_async(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_finalize")]
  public static extern void Query_finalize(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_result_buffer_elements")]
  public static extern global::System.IntPtr Query_result_buffer_elements(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_add_range")]
  public static extern global::System.IntPtr Query_add_range(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, string jarg3, string jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_range_num")]
  public static extern ulong Query_range_num(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_range")]
  public static extern global::System.IntPtr Query_range(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2, ulong jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_est_result_size")]
  public static extern ulong Query_est_result_size(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_est_result_size_var")]
  public static extern global::System.IntPtr Query_est_result_size_var(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_fragment_num")]
  public static extern uint Query_fragment_num(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_fragment_uri")]
  public static extern string Query_fragment_uri(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_fragment_timestamp_range")]
  public static extern global::System.IntPtr Query_fragment_timestamp_range(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_int32_vector_buffer")]
  public static extern void Query_set_int32_vector_buffer(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_int64_vector_buffer")]
  public static extern void Query_set_int64_vector_buffer(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_uint32_vector_buffer")]
  public static extern void Query_set_uint32_vector_buffer(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_uint64_vector_buffer")]
  public static extern void Query_set_uint64_vector_buffer(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_double_vector_buffer")]
  public static extern void Query_set_double_vector_buffer(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_set_buffer")]
  public static extern global::System.IntPtr Query_set_buffer(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3, global::System.Runtime.InteropServices.HandleRef jarg4);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_to_status")]
  public static extern int Query_to_status(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Query_to_str")]
  public static extern string Query_to_str(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Query")]
  public static extern void delete_Query(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_enable")]
  public static extern void Stats_enable();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_disable")]
  public static extern void Stats_disable();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_reset")]
  public static extern void Stats_reset();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_dump__SWIG_0")]
  public static extern void Stats_dump__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_dump__SWIG_1")]
  public static extern void Stats_dump__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_raw_dump__SWIG_0")]
  public static extern void Stats_raw_dump__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_Stats_raw_dump__SWIG_1")]
  public static extern void Stats_raw_dump__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_Stats")]
  public static extern global::System.IntPtr new_Stats();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_Stats")]
  public static extern void delete_Stats(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_check_config_error")]
  public static extern void check_config_error(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_version")]
  public static extern global::System.IntPtr version();

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_VFS__SWIG_0")]
  public static extern global::System.IntPtr new_VFS__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_VFS__SWIG_1")]
  public static extern global::System.IntPtr new_VFS__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_new_VFS__SWIG_2")]
  public static extern global::System.IntPtr new_VFS__SWIG_2(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_create_bucket")]
  public static extern void VFS_create_bucket(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_remove_bucket")]
  public static extern void VFS_remove_bucket(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_is_bucket")]
  public static extern bool VFS_is_bucket(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_empty_bucket")]
  public static extern void VFS_empty_bucket(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_is_empty_bucket")]
  public static extern bool VFS_is_empty_bucket(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_create_dir")]
  public static extern void VFS_create_dir(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_is_dir")]
  public static extern bool VFS_is_dir(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_remove_dir")]
  public static extern void VFS_remove_dir(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_is_file")]
  public static extern bool VFS_is_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_remove_file")]
  public static extern void VFS_remove_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_dir_size")]
  public static extern ulong VFS_dir_size(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_ls")]
  public static extern global::System.IntPtr VFS_ls(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_file_size")]
  public static extern ulong VFS_file_size(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_move_file")]
  public static extern void VFS_move_file(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_move_dir")]
  public static extern void VFS_move_dir(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_touch")]
  public static extern void VFS_touch(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_context")]
  public static extern global::System.IntPtr VFS_context(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_ptr")]
  public static extern global::System.IntPtr VFS_ptr(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_VFS_config")]
  public static extern global::System.IntPtr VFS_config(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_delete_VFS")]
  public static extern void delete_VFS(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_TypeError_SWIGSmartPtrUpcast")]
  public static extern global::System.IntPtr TypeError_SWIGSmartPtrUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_SchemaMismatch_SWIGSmartPtrUpcast")]
  public static extern global::System.IntPtr SchemaMismatch_SWIGSmartPtrUpcast(global::System.IntPtr jarg1);

  [global::System.Runtime.InteropServices.DllImport("tiledb", EntryPoint="CSharp_tiledb_AttributeError_SWIGSmartPtrUpcast")]
  public static extern global::System.IntPtr AttributeError_SWIGSmartPtrUpcast(global::System.IntPtr jarg1);
}

}
